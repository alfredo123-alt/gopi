# Recursive function to generate Fibonacci sequence
fibonacci <- function(n) {
  if (n <= 0) {
    return(NA)  # Handle invalid input
  } else if (n == 1) {
    return(0)  # First Fibonacci number
  } else if (n == 2) {
    return(1)  # Second Fibonacci number
  } else {
    return(fibonacci(n - 1) + fibonacci(n - 2))
  }
}

# Function to print Fibonacci sequence up to n terms
print_fibonacci_sequence <- function(n) {
  if (n <= 0) {
    print("Please enter a positive integer.")
    return()
  }
  
  cat("Fibonacci sequence up to", n, "terms:\n")
  for (i in 1:n) {
    cat(fibonacci(i), " ")
  }
  cat("\n")  # New line for better formatting
}

# Prompt user for input
n <- as.integer(readline("Enter the number of terms: "))
print_fibonacci_sequence(n)



# Function to find sum of natural numbers up to n using a loop
sum_natural_numbers <- function(n) {
  sum <- 0
  for (i in 1:n) {
    sum <- sum + i
  }
  return(sum)
}

# Compute sum of first 10 natural numbers
n <- 10
result <- sum_natural_numbers(n)
cat("Sum of first", n, "natural numbers is:", result, "\n")


Pseudo Code for Fibonacci Sequence
pgsql
Copy
Edit
START
    DEFINE function fibonacci(n)
        IF n <= 0 THEN return NA
        ELSE IF n == 1 THEN return 0
        ELSE IF n == 2 THEN return 1
        ELSE return fibonacci(n-1) + fibonacci(n-2)
    END FUNCTION

    DEFINE function print_fibonacci_sequence(n)
        IF n <= 0 THEN PRINT "Invalid input"
        ELSE
            PRINT "Fibonacci sequence:"
            LOOP i FROM 1 TO n
                PRINT fibonacci(i)
            END LOOP
    END FUNCTION

    PROMPT user for n
    CALL print_fibonacci_sequence(n)
END


Pseudo Code for Sum of Natural Numbers Using Loop
sql
Copy
Edit
START
    DEFINE function sum_natural_numbers(n)
        SET sum = 0
        FOR i FROM 1 TO n
            sum = sum + i
        END FOR
        RETURN sum
    END FUNCTION

    SET n = 10
    CALL sum_natural_numbers(n)
    PRINT sum
END
